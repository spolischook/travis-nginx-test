{% set chartData = {} %}
{% set max = 0 %}
{% set widgetId = random() %}
{% set hasData = data|length>0 %}
{% for item in data %}
    {% set max = max(max, item.value) %}
{% endfor %}
{% set max = (max * 1.2)|round(-3) %}

{% if hasData %}
    <div class="chart-container">
        <div class="clearfix">
            <div id="{{ widgetId }}-chart" class="column-chart chart"></div>
        </div>
    </div>

    {% set isMobileVersion = isMobileVersion() %}
    {% set symbolPosition = 'number' ~ (oro_currency_symbol_prepend() ? 'Prefix' : 'Suffix') %}
    {% set json = {
        'chart': {
            'showValues': isMobileVersion ? '0' : '1',
            'maxColWidth': '50',
            'showCanvasBg': '0',
            'showCanvasBase': '0',
            'animation': '0',
            'valuePadding': '10',
            'rotateXAxisName': '0',
            'bgColor': 'transparent',
            'showZeroPlane': '0',
            'canvasBgColor': 'transparent',
            'borderColor': 'transparent',
            'showShadow': '0',
            'formatNumberScale': '0',
            'decimals': '2',
            'chartRightMargin': '50',
            'divLineColor': 'eaeaea',
            'showVLineLabelBorder': '0',
            'paletteColors': options.settings.chartColors,
            'yAxisMaxValue': max
        },
        'data': data
    } %}

    {% if options.settings.connect_dots_with_line == false %}
        {% set json = json|merge({
            'chart':{
                'anchorBgColor': options.settings.chartColors,
                'anchorBorderColor': options.settings.chartColors,
                'lineColor': 'transparent'
            }|merge(json.chart)
        }) %}
    {% endif %}

    <script type="text/javascript">
        require(
                ['jquery', 'orocrmprofusioncharts/lib/FusionCharts.jqueryplugin', 'oro/chart/data_formatter'],
                function ($, fusion, dataFormatter) {
                    var schema = {{ options.data_schema|json_encode|raw }};
                    var dataSource = {{ json|json_encode|raw }};

                    dataSource.data = dataSource.data.sort(function(first, second){
                        var firstLabel = dataFormatter.clearValue(first.label, schema.label.frontend_type);
                        var secondLabel = dataFormatter.clearValue(second.label, schema.label.frontend_type);
                        return firstLabel - secondLabel;
                    });
                    if(schema.value.frontend_type == 'percent'){
                        dataSource.chart['numberSuffix'] = '%';
                    }else if(schema.value.frontend_type == 'currency') {
                        schema.value.frontend_type = 'money';
                        dataSource.chart['{{ symbolPosition }}'] = '{{ oro_currency_symbol() }}';
                        dataSource.chart['forceDecimals'] = '1';
                    }


                    for (var i in dataSource.data) {
                        var point = dataSource.data[i];
                        var labelValue = dataFormatter.clearValue(point.label, schema.label.frontend_type);
                        point.label = dataFormatter.formatLabel(labelValue, schema.label.frontend_type);
                        point.displayValue = dataFormatter.formatLabel(point.value, schema.value.frontend_type);
                        if (schema.value.frontend_type == 'percent') {
                            point.value*=100;
                        } else {
                            point.value = dataFormatter.clearValue(point.value, schema.value.frontend_type);
                        }
                        dataSource.data[i] = point;
                    }

                    $('#{{ widgetId }}-chart').insertFusionCharts({
                        type: 'Line',
                        dataSource: dataSource,
                        dataFormat: 'json',
                        width: '100%',
                        height: 300,
                        id: '{{ widgetId }}'
                    });
                }
        );
    </script>
{% else %}
    <div class="clearfix no-data">
        <span>{{ 'oro.dashboard.no_data_found'|trans }}</span>
    </div>
{% endif %}
