{% extends 'OroUIBundle:actions:update.html.twig' %}
{% form_theme form with 'OroFormBundle:Form:fields.html.twig' %}

{% oro_title_set({params : {"%entityName%": entity_config.get('label')|default('N/A')|trans }}) %}

{% set formAction = path('oro_entityextend_field_create', {id: entity_id}) %}

{% block navButtons %}
    {{ UI.cancelButton(path('oro_entityconfig_view', {'id':entity_id})) }}
    {{ UI.saveActionButton({
        'label': 'Continue'|trans,
        'route': 'oro_entityextend_field_update',
        'params': {'id': '$id'}
    }) }}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
        'entity':      'entity',
        'indexPath':   path('oro_entityconfig_index'),
        'indexLabel': 'oro.entity_extend.config_grid.entities'|trans,
        'entityTitle': 'oro.entity_extend.config_grid.new_field'|trans,
        'additional': [
            {
                'indexPath'  : path('oro_entityconfig_view', {id: entity_id}),
                'indexLabel' : entity_config.get('label')|default('N/A')|trans
            },
        ]
    } %}

    {{ parent() }}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'configfield-create' %}
    {% set data = {
        'formErrors': form_errors(form)? form_errors(form) : null,
        'dataBlocks': form_data_blocks(form),
        'hiddenData': form_rest(form)
    } %}

    <script type="text/javascript">
        require(['jquery'], function($) {
            'use strict';
            $(function() {
                $(document).on('change', 'form select#{{ form.type.vars.id }}', function (e) {
                    var el = $(this),
                        complexFieldType = el.find('option:selected').attr('value').split('||'),
                        field_name = $('input#{{ form.fieldName.vars.id }}');

                    if (complexFieldType !== 'undefined'
                        && complexFieldType.length > 1
                        && complexFieldType[0].split('|').length === 4
                        && complexFieldType[1]) {
                        $(field_name).val(complexFieldType[1]).attr('readonly', 'readonly');
                    }
                    else if ($(field_name).attr('readonly')) {
                        $(field_name).val('').removeAttr('readonly');
                    }
                });
            })
        });
    </script>

    {{ parent() }}
{% endblock content_data %}
