{% extends bap.layout %}
{% import 'OroUIBundle::macros.html.twig' as UI %}
{% oro_title_set({params : {"%name%": dashboard.getLabel() }}) %}
{% block breadcrumb %}
    {% set breadcrumbs = [
        {'label': 'oro.dashboard.menu.dashboards_tab.label'|trans },
        {'label': dashboard.getLabel()|trans }
    ] %}
    {% include 'OroNavigationBundle:Menu:breadcrumbs.html.twig' %}
{% endblock breadcrumb %}
{% block content %}
{% set widgetIdPrefix = 'dashboard-widget-' ~ random() ~ '-' %}
{% set allowEdit = resource_granted('EDIT', dashboard.entity) %}
<div class="layout-content dashboard-container-wrapper">
    <div class="container-fluid page-title">
        <div class="navigation clearfix navbar-extra navbar-extra-right">
            <div class="row">
                {% block title %}
                <div class="pull-left pull-left-extra">
                    <div class="pull-left">
                        <h1 class="oro-subtitle">
                            {{ dashboard.getLabel()|trans }}
                        </h1>
                    </div>
                </div>
                {% endblock title %}
                {% block titleNavButtons %}

                    {% placeholder dashboard_navButtons_before %}

                    <div class="pull-right title-buttons-container">
                        {% if allowEdit %}
                            <a href="javascript:void(0);" class="dashboard-widgets-add btn main-group pull-left">
                                <i class="icon-plus"></i>
                                {{ 'oro.dashboard.add_dashboard_widgets.add_widget'|trans }}
                            </a>
                        {% endif %}

                        {% if resource_granted('DELETE', dashboard.entity) or resource_granted('oro_dashboard_create') or resource_granted('EDIT', dashboard.entity) %}
                            {% set html %}
                                {% if resource_granted('EDIT', dashboard.entity) %}
                                    {{ UI.dropdownItem({
                                        'path': path('oro_dashboard_update', {id:dashboard.id}),
                                        'title': 'oro.dashboard.edit_dashboard_link.title'|trans,
                                        'label': 'oro.dashboard.edit_dashboard_link.text'|trans,
                                        'iCss': 'icon-edit'
                                    }) }}
                                {% endif %}
                                {% if resource_granted('oro_dashboard_create') %}
                                    {{ UI.dropdownItem({
                                        'path': path('oro_dashboard_create'),
                                        'title': 'oro.dashboard.create_dashboard_link.title'|trans,
                                        'label': 'oro.dashboard.create_dashboard_link.text'|trans,
                                        'iCss': 'icon-plus'
                                    }) }}
                                {% endif %}
                                {% if resource_granted('DELETE', dashboard.entity) %}
                                    <li>
                                        {{  UI.deleteLink({
                                            'dataUrl': path('oro_api_delete_dashboard', {id:dashboard.id}),
                                            'dataRedirect': path('oro_dashboard_index'),
                                            'aCss': 'no-hash remove-button',
                                            'id': 'btn-remove-user',
                                            'dataId': dashboard.id,
                                            'entity_label': 'oro.dashboard.entity_label'|trans
                                        }) }}
                                    </li>
                                {% endif %}
                            {% endset %}

                            {{ UI.dropdownButton({
                                'label': 'oro.dashboard.tools_dropdown.label'|trans,
                                'iCss': 'icon icon-cog',
                                'aCss': 'pull-right',
                                'html': html
                            }) }}
                        {% endif %}
                    </div>
                    {% block navButtons %}
                        {% if dashboards|length > 1 %}
                            <div class="dashboard-selector-container pull-right title-buttons-container">
                                <label for="dashboard_selector">{{ 'oro.dashboard.entity_plural_label'|trans }}:</label>
                                <select id="dashboard_selector">
                                    {% for dashboardModel in dashboards %}
                                        <option value="{{ dashboardModel.id }}"{% if dashboardModel.id == dashboard.id %} selected="selected"{% endif %}>
                                            {{ dashboardModel.getLabel()|trans|truncate(50) }}
                                        </option>
                                    {% endfor %}
                                </select>
                            </div>

                            <script type="text/javascript">
                                require(['jquery', 'routing', 'oroui/js/mediator'],
                                function($, routing, mediator){
                                    $('#dashboard_selector').on('change', function (e) {
                                        var url = routing.generate('oro_dashboard_view', {id: $(e.currentTarget).val(), change_dashboard: true});
                                        mediator.execute('redirectTo', {url: url}, {redirect: true});
                                    });
                                });
                            </script>
                        {% endif %}
                    {% endblock navButtons %}

                    {% placeholder dashboard_navButtons_after %}

                {% endblock titleNavButtons %}
            </div>
        </div>
    </div>
    {% block widgets_content %}
        {% set contentClass = contentClass|default('dashboard-container') %}
        <div class="scrollable-container">
            <div class="responsive-section {{ contentClass }}">
                <div class="clearfix">
                {% block widgets %}
                    {{
                        _self.renderWidgetsColumn({
                            'widgets': dashboard.getOrderedColumnWidgets(0, false, true),
                            'columnElementId': 'dashboard-column-0',
                            'columnClass': 'dashboard-column',
                            'widgetIdPrefix': widgetIdPrefix,
                            'allowEdit': allowEdit
                        })
                    }}
                    {{
                        _self.renderWidgetsColumn({
                            'widgets': dashboard.getOrderedColumnWidgets(1, true, false),
                            'columnElementId': 'dashboard-column-1',
                            'columnClass': 'dashboard-column',
                            'widgetIdPrefix': widgetIdPrefix,
                            'allowEdit': allowEdit
                        })
                    }}
                {% endblock widgets %}
                </div>
            </div>
        </div>
    {% endblock widgets_content %}

    {% set availableWidgets = [] %}
    {% for widgetName, widget in widgets %}
        {% if widget.acl is not defined or resource_granted(widget.acl) %}
            {% set icon = asset("bundles/orodashboard/img/no_icon.png") %}
            {% if widget.icon is defined %}
                {% set icon = asset(widget.icon) %}
            {% endif %}
            {% set title = widget.label|trans %}
            {% set description = '' %}
            {% if widget.description is defined %}
                {% set description = widget.description|trans %}
            {% endif %}
            {% set availableWidgets = availableWidgets|merge([{
            'dialogIcon': icon,
            'title': title,
            'widgetName': widgetName,
            'description': description,
            'isNew': widget.isNew
            }]) %}
        {% endif %}
    {% endfor %}

    <script type="text/javascript">
        require(['orodashboard/js/dashboard-container'],
            function(dashboardContainer) {
                {% set widgetIds = [] %}
                {% for widget in dashboard.widgets %}
                    {% if widget.config.acl is not defined or resource_granted(widget.config.acl) %}
                        {% set widgetIds = widgetIds|merge([widgetIdPrefix ~ widget.id]) %}
                    {% endif %}
                {% endfor %}
                dashboardContainer.initialize({
                    widgetIds: {{ widgetIds|json_encode|raw }},
                    dashboardId: {{ dashboard.id|json_encode|raw }},
                    columnsSelector: '.dashboard-column',
                    allowEdit: {{ allowEdit ? 'true' : 'false' }},
                    availableWidgets: {{ availableWidgets|json_encode|raw }}
                });
            }
        );
    </script>
    <script type="text/javascript">
        require(['oronavigation/js/content-manager'], function (contentManager) {
            // prevents caching dashboard page, to keep it actual
            contentManager.cacheIgnore();
        });
    </script>
</div>
{% endblock content %}

{% macro renderWidgetsColumn(options) %}
    <div id="{{ options.columnElementId }}" class="responsive-cell dashboard-column">
        {% for widget in options.widgets %}
            {% if widget.config.acl is not defined or resource_granted(widget.config.acl) %}
                {{
                    oro_widget_render({
                        'widgetType': 'dashboard-item',
                        'wid': options.widgetIdPrefix ~ widget.id,
                        'url': path(widget.config.route, widget.config.route_parameters|merge({'_widgetId': widget.id})),
                        'state': {
                            'id': widget.id,
                            'expanded': widget.expanded,
                            'layoutPosition': widget.layoutPosition,
                        },
                        'allowEdit': options.allowEdit,
                        'showConfig': options.allowEdit and widget.config.configuration|length > 0,
                        'widgetName': widget.entity.name
                    })
                }}
            {% endif %}
        {% endfor %}
        <div class="empty-text{% if options.widgets|length > 0 %} hidden-empty-text{% endif %}">
            <div class="widget-placeholder">
                {% if options.allowEdit %}
                    {{ 'oro.dashboard.empty_column_message.allowed'|trans|raw }}
                {% else %}
                    {{ 'oro.dashboard.empty_column_message.denied'|trans }}
                {% endif %}
            </div>
        </div>
    </div>
{% endmacro %}
