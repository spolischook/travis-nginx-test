{% extends 'OroUIBundle:actions:update.html.twig' %}
{% import 'OroCalendarBundle::invitations.html.twig' as invitations %}

{% oro_title_set({params : {"%entity.title%": entity.title, "%entityName%": 'oro.calendar.calendarevent.entity_label'|trans } }) %}
{% set entityId = entity.id %}

{% block navButtons %}
    {% set html = UI.saveAndCloseButton({
        'route': 'oro_calendar_event_view',
        'params': {'id': '$id'}
    }) %}

    {% if resource_granted('oro_calendar_event_create') %}
        {% set html = html ~ UI.saveAndNewButton({
            'route': 'oro_calendar_event_create'
        }) %}
    {% endif %}

    {% if resource_granted('oro_calendar_event_update') %}
        {% set html = html ~ UI.saveAndStayButton({
            'route': 'oro_calendar_event_update',
            'params': {'id': '$id'}
        }) %}
    {% endif %}
    {{ UI.dropdownSaveButton({'html': html}) }}
    {{ UI.cancelButton(path('oro_calendar_event_index')) }}
{% endblock %}

{% block pageHeader %}
    {% if entityId %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('oro_calendar_event_index'),
            'indexLabel':  'oro.calendar.calendarevent.entity_plural_label'|trans,
            'entityTitle': entity.title
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.calendar.calendarevent.entity_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'calendarevent-form' %}
    {% set recurrencePattern = '' %}
    {% if entity.recurrence %}
        {% set recurrencePattern = UI.renderProperty(
            'oro.calendar.calendarevent.recurrence.label'|trans,
            get_recurrence_text_value(entity.recurrence)
        ) %}
    {% elseif entity.recurringEvent %}
        {% set recurrencePattern = UI.renderProperty(
            'oro.calendar.calendarevent.recurrence.exception.label'|trans,
            get_recurrence_text_value(entity.recurringEvent.recurrence)
        ) %}
    {% endif %}

    {% set dataBlocks = [{
        'title': 'General Information'|trans,
        'class': 'active',
        'subblocks': [
            {
                'title': '',
                'data':  [
                    form_row(form.title),
                    form_row(form.description),
                    form_row(form.start),
                    form_row(form.end),
                    form_row(form.allDay),
                    recurrencePattern,
                    form_row(form.backgroundColor),
                    form.calendarUid is defined ? form_row(form.calendarUid) : null,
                    form_row(form.attendees),
                    entity.recurrence is null ? form_row(form.reminders) : null,
                    form_row(form.notifyInvitedUsers),
                    entity.relatedAttendee  and entity.relatedAttendee.status and entity.parent is null and entity.childAttendees is not empty and entity.recurrence is null ? invitations.notifyGuestsComponent() : null
                ]
            }
        ]
    }] %}

    {% set additionalData = [] %}
    {% for child in form.children if child.vars.extra_field is defined and child.vars.extra_field %}
        {% set additionalData = additionalData|merge([form_row(child)]) %}
    {% endfor %}
    {% if additionalData is not empty %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'Additional'|trans,
            'subblocks': [{
                'title': '',
                'useSpan': false,
                'data' : additionalData
            }]
        }] ) %}
    {% endif %}

    {% set data = {
        'formErrors': form_errors(form)? form_errors(form) : null,
        'dataBlocks': dataBlocks
    } %}
    {% set options = {
        'view':'orocalendar/js/app/views/calendar-event-form-view',
        'nativeMode': isMobileVersion()
    } %}
    <div data-page-component-module="oroui/js/app/components/view-component"
         data-page-component-options="{{ options|json_encode }}"
         data-layout="separate">
        {{ parent() }}
    </div>
{% endblock content_data %}
