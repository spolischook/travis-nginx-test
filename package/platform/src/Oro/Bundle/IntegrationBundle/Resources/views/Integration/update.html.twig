{% extends 'OroUIBundle:actions:update.html.twig' %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}

{% form_theme form with oro_integration_themes(form) %}

{% set entity = form.vars.value %}
{% set formAction = formAction is defined
    ? formAction
    : (entity.id ? path('oro_integration_update', { id: entity.id }) : path('oro_integration_create'))
%}

{% if entity.id %}
    {% oro_title_set({params : {"%integration.name%": entity.name } }) %}
{% endif %}

{% block breadcrumbs %}
    {{ parent() }}
    <div class="pull-left">
        {% if entity.enabled %}
            <div class="badge badge-enabled status-enabled">
                <i class="icon-status-enabled icon-circle"></i>{{ 'oro.integration.integration.enabled.active.label'|trans }}</div>
        {% else %}
            <div class="badge badge-disabled status-disabled">
                <i class="icon-status-disabled icon-circle"></i>{{ 'oro.integration.integration.enabled.inactive.label'|trans }}</div>
        {% endif %}
    </div>
{% endblock breadcrumbs %}

{% block navButtons %}
    {% set enableDelete = oro_integration_is_delete_enabled(entity.getEditMode) %}
    {% if entity.id and resource_granted('DELETE', entity) and enableDelete %}
        {{ UI.deleteButton({
            'dataUrl': path('oro_api_delete_integration', {'id': entity.id}),
            'dataRedirect': path('oro_integration_index'),
            'aCss': 'no-hash remove-button',
            'id': 'btn-remove-channel',
            'dataId': entity.id,
            'entity_label':   'oro.integration.integration.entity_label'|trans,
            'dataMessage':    'oro.integration.delete_sync_integration.content'|trans,
            'successMessage': 'oro.integration.delete_sync_integration.success'|trans
        }) }}
        {{ UI.buttonSeparator() }}
    {% endif %}

    {{ UI.cancelButton(path('oro_integration_index')) }}

    {% if entity.id %}
        {% set switchEnabled = oro_integration_is_switch_enabled(entity.getEditMode) %}
        {% if switchEnabled %}
            {% if entity.enabled %}
                {{ _self.ajaxButton({
                'aCss':  'btn-danger',
                'iCss':  'icon-remove',
                'label': 'oro.integration.deactivate'|trans,
                'title': 'oro.integration.deactivate'|trans,
                'dataId': entity.id,
                'dataUrl': path('oro_api_deactivate_integration', {'id': entity.id}),
                'dataRedirect': path('oro_integration_update', {'id': entity.id, '_enableContentProviders': 'mainMenu'}),
                'errorMessage': 'oro.integration.deactivate.fail.message'
                }) }}
            {% else %}
                {{ _self.ajaxButton({
                'aCss':  'btn-success',
                'iCss':  'icon-ok',
                'label': 'oro.integration.activate'|trans,
                'title': 'oro.integration.activate'|trans,
                'dataId': entity.id,
                'dataUrl': path('oro_api_activate_integration', {'id': entity.id}),
                'dataRedirect': path('oro_integration_update', {'id': entity.id, '_enableContentProviders': 'mainMenu'}),
                'errorMessage': 'oro.integration.activate.fail.message'
                }) }}
            {% endif %}
            {{ UI.buttonSeparator() }}
        {% endif %}

        {% if entity.enabled %}
        <div class="btn-group">
            {% set buttonsHtml %}
                {{ UI.clientButton({
                    'dataUrl': path('oro_integration_schedule', { 'id': entity.id }) ,
                    'aCss':   'no-hash schedule-button',
                    'label' : 'oro.integration.button.sync'|trans
                }) }}
                {% placeholder oro_integration_force_sync_button with {'entity': entity} %}
            {% endset %}
            {{ UI.pinnedDropdownButton({'html': buttonsHtml}) }}
        </div>
        {% endif %}
    {% endif %}

    {% if form.type.vars.choices is not empty %}
        {% set html = UI.saveAndCloseButton({
            'route': 'oro_integration_index',
            'params': {'_enableContentProviders': 'mainMenu'}
        }) %}
        {% if resource_granted('oro_integration_create') %}
            {% set html = html ~ UI.saveAndNewButton({
                'route': 'oro_integration_create'
            }) %}
        {% endif %}
        {% if form.vars.value.id or resource_granted('oro_integration_update') %}
            {% set html = html ~ UI.saveAndStayButton({
                'route': 'oro_integration_update',
                'params': {'id': '$id', '_enableContentProviders': 'mainMenu'}
            }) %}
        {% endif %}
        {{ UI.dropdownSaveButton({'html': html}) }}
    {% endif %}

{% endblock navButtons %}

{% block pageHeader %}
    {% if entity.id %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('oro_integration_index'),
            'indexLabel':  'oro.integration.integration.entity_plural_label'|trans,
            'entityTitle': entity.name|default('N/A')
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.integration.integration.entity_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title }%}
    {% endif %}
{% endblock pageHeader %}

{% block stats %}{% endblock %}

{% block content_data %}
    {% set id = 'channel-update' %}
    {% set dataBlocks = [] %}

    {% if (form.synchronizationSettings is defined and form.synchronizationSettings.count) %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'Synchronization Settings'|trans,
            'subblocks': [{
                'title': '',
                'data':  [form_widget(form.synchronizationSettings)]
            }]
        }]) %}
    {% endif %}

    {% if (form.mappingSettings is defined and form.mappingSettings.count) %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'Mapping Settings'|trans,
            'subblocks': [{
                'title': '',
                'data':  [form_widget(form.mappingSettings)]
            }]
        }]) %}
    {% endif %}

    {% if entity.id and isWidgetContext|default(false) is sameas(false) %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'Statuses'|trans,
                'subblocks': [{
                    'title': '',
                    'data':  [
                        dataGrid.renderGrid('oro-integration-status-grid', {
                            integrationId:   entity.id,
                            integrationType: entity.type
                        })
                    ]
                }]
        }]) %}
    {% endif %}

    {% set dataBlocks = [{
        'title': 'General'|trans,
        'class': 'active',
        'subblocks': [{
            'title': 'Basic Information'|trans,
            'data':  [form_widget(form)]
        }]
    }]|merge(dataBlocks) %}

    {% set data = {
        'formErrors': form_errors(form)? form_errors(form) : null,
        'dataBlocks': dataBlocks,
    } %}
    {{ parent() }}
    <script type="text/javascript">
        require(['jquery', 'orotranslation/js/translator', 'routing', 'oroui/js/messenger', 'oroui/js/mediator', 'oroui/js/modal'],
        function ($, __, routing, messenger, mediator, Modal) {
            $(function () {
                var scheduleSync = function (url) {
                    mediator.execute('showLoading');

                    $.ajax(url, {
                        success: function (res) {
                            messenger.notificationMessage('success', res.message);
                        },
                        error: function () {
                            messenger.notificationMessage('error', __('oro.integration.error'));
                        },
                        dataType: 'json'
                    }).always(function () {
                        mediator.execute('hideLoading');
                    });
                };

                $('.schedule-button').click(function (e) {
                    e.preventDefault();
                    var url = $(this).data('url');

                    if ($(this).data('force')) {
                        var confirmation = new Modal({
                            title: __('oro.integration.force_sync.title'),
                            okText: __('oro.integration.force_sync.ok'),
                            cancelText: __("oro.integration.force_sync.cancel"),
                            content: __('oro.integration.force_sync.message', {'integration_name': {{ entity.name|json_encode|raw }} }),
                            className: 'modal oro-modal-danger',
                            okButtonClass: 'btn-danger',
                            handleClose: true
                        });

                        confirmation.on('ok', function () {
                            scheduleSync(url);
                        });

                        confirmation.open();
                    } else {
                        scheduleSync(url);
                    }
                });
            });
        });
    </script>
{% endblock content_data %}

{% macro ajaxButton(parameters) %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}

    {% set dataAttributes = {
        'page-component-module': 'orointegration/js/app/components/ajax-button',
        'page-component-options': {'redirect': parameters.dataRedirect, 'errorMessage': parameters.errorMessage }|json_encode,
    } %}

    {{ UI.clientButton(parameters|merge({'dataAttributes': dataAttributes})) }}
{% endmacro %}
