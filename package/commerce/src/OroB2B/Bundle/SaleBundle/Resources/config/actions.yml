actions:
    orob2b_sale_expire_quote_action:
        label: orob2b.sale.quote.actions.quote_expire
        enabled: true
        applications:
            - backend
            - frontend
        entities:
            - OroB2B\Bundle\SaleBundle\Entity\Quote
        order: 10
        frontend_options:
            icon: icon-time
        preconditions:
            @equal: [$expired, false]
        postfunctions:
            - @assign_value: [$expired, true]
            - @flash_message:
                message: orob2b.sale.quote.message.quote.expire.success
                type: 'info'
                message_parameters:
                    id: $id
            - @redirect:
                route: 'orob2b_sale_quote_index'

    orob2b_sale_notify_customer_by_email_action:
        label: orob2b.sale.quote.notify_customer.by_email.link.text
        enabled: true
        applications: [backend, frontend]
        entities:
            - OroB2B\Bundle\SaleBundle\Entity\Quote
        order: 20
        acl_resource: oro_email_email_create

        frontend_options:
            icon: icon-envelope
            group: orob2b.sale.quote.notify_customer.label
            dialog_template: OroB2BSaleBundle:Action:emailNotification.html.twig
            dialog_title: orob2b.sale.quote.notify_customer.by_email.link.text
            dialog_options:
                allowMaximize: true
                allowMinimize: true
                dblclick: maximize
                maximizedHeightDecreaseBy: minimize-bar
                width: 1000

        attributes:
            email:
                label: ' '
                type: object
                options:
                    class: Oro\Bundle\EmailBundle\Form\Model\Email

        form_options:
            attribute_fields:
                email:
                    form_type: oro_email_email

        initfunctions:
            - @call_service_method:
                attribute: $.email
                service: orob2b_sale.helper.notification
                method: getEmailModel
                method_parameters: [$.data]
            - @call_service_method:
                attribute: $.appendSignature
                service: oro_config.user
                method: get
                method_parameters: ['oro_email.append_signature']

        postfunctions:
            - @call_service_method:
                service: orob2b_sale.helper.notification
                method: send
                method_parameters: [$.email, $.data]
