operations:
    orob2b_sale_expire_quote:
        label: orob2b.sale.quote.actions.quote_expire
        enabled: true
        applications: [backend]
        routes:
            - orob2b_sale_quote_view
        datagrids:
            - quotes-grid
        order: 10
        button_options:
            icon: icon-time
        frontend_options:
            confirmation: orob2b.sale.quote.actions.quote_expire_confirm
        preconditions:
            @equal: [$expired, false]
        actions:
            - @run_action_group:
                action_group: orob2b_sale_expire_quote
                parameters_mapping:
                    data: $.data
            - @flash_message:
                message: orob2b.sale.quote.message.quote.expire.success
                type: 'info'
                message_parameters:
                    id: $id
            - @redirect:
                route: 'orob2b_sale_quote_index'

    orob2b_sale_notify_customer_by_email:
        label: orob2b.sale.quote.notify_customer.by_email.link.text
        applications: [backend, frontend]
        entities:
            - OroB2B\Bundle\SaleBundle\Entity\Quote
        order: 20
        acl_resource: oro_email_email_create

        button_options:
            icon: icon-envelope
            group: orob2b.sale.quote.notify_customer.label

        frontend_options:
            template: OroB2BSaleBundle:Action:emailNotification.html.twig
            title: orob2b.sale.quote.notify_customer.by_email.link.text
            options:
                allowMaximize: true
                allowMinimize: true
                dblclick: maximize
                maximizedHeightDecreaseBy: minimize-bar
                width: 1000

        attributes:
            email:
                label: ' '
                type: object
                options:
                    class: Oro\Bundle\EmailBundle\Form\Model\Email

        form_options:
            attribute_fields:
                email:
                    form_type: oro_email_email

        form_init:
            - @call_service_method:
                attribute: $.email
                service: orob2b_sale.helper.notification
                method: getEmailModel
                method_parameters: [$.data]
            - @call_service_method:
                attribute: $.appendSignature
                service: oro_config.user
                method: get
                method_parameters: ['oro_email.append_signature']

        actions:
            - @run_action_group:
                action_group: orob2b_sale_notify_customer_by_email
                parameters_mapping:
                    data: $.data
                    email: $.email

    orob2b_sale_frontend_quote_accept_and_submit_to_order:
        label: orob2b.frontend.sale.btn.accept_quote_create_order
        applications: [frontend]
        routes:
            - orob2b_sale_quote_frontend_view
        order: 20
        acl_resource: [CREATE, entity:commerce@OroB2B\Bundle\OrderBundle\Entity\Order]
        button_options:
            icon: icon-edit
            class: quota-accept-btn
        preconditions:
#            @equal: [false, $hasOfferVariants]
        actions:
            - @run_action_group:
                results:
                    order_id: $.order.id
                action_group: orob2b_sale_frontend_quote_accept_and_submit_to_order
                parameters_mapping:
                    data: $.data
            - @flash_message:
                message: orob2b.frontend.sale.message.quote.create_order.success
                type: 'success'
            - @redirect:
                constraints:
                    @acl_resource: orob2b_order_frontend_view
                parameters:
                    route: 'orob2b_order_frontend_view'
                    route_parameters: {id: $.order_id}

    orob2b_sale_frontend_quote_accept_and_submit_to_order_from_widget:
        label: orob2b.frontend.sale.btn.widget_accept_quote_create_order
        applications: [frontend]
        routes:
            - orob2b_sale_quote_frontend_view
        order: 20
        acl_resource: [CREATE, entity:commerce@OroB2B\Bundle\OrderBundle\Entity\Order]

        button_options:
            icon: icon-edit
            class: quota-accept-btn

        frontend_options:
            template: OroB2BSaleBundle:Action:quoteToOrder.html.twig
            options:
                modal: true,
                resizable: true,
                width: 1000
                height: 500
                allowMaximize: true
                dblclick: maximize

        preconditions:
#            @equal: [true, $hasOfferVariants]

        attributes:
            quote_to_order:
                label: ' '
                type: array

        form_options:
            attribute_fields:
                quote_to_order:
                    form_type: orob2b_sale_quote_to_order

        form_init:
            - @assign_value: [$.quote_to_order, $.data]

        actions:
            - @run_action_group:
                results:
                    order_id: $.order.id
                action_group: orob2b_sale_frontend_quote_accept_and_submit_to_order_from_widget
                parameters_mapping:
                    data: $.data
                    quote_to_order: $.quote_to_order
            - @flash_message:
                message: orob2b.frontend.sale.message.quote.create_order.success
                type: 'success'
            - @redirect:
                constraints:
                    @acl_resource: orob2b_order_frontend_view
                parameters:
                    route: 'orob2b_order_frontend_view'
                    route_parameters: {id: $.order_id}

action_groups:
    orob2b_sale_expire_quote:
        parameters:
            data:
                type: OroB2B\Bundle\SaleBundle\Entity\Quote
        conditions:
            @equal: [$.data.expired, false]
        actions:
            - @assign_value: [$.data.expired, true]
            - @flush_entity: $.data

    orob2b_sale_notify_customer_by_email:
        parameters:
            data:
                type: OroB2B\Bundle\SaleBundle\Entity\Quote
            email:
                type: Oro\Bundle\EmailBundle\Form\Model\Email
        acl_resource: oro_email_email_create
        actions:
            - @call_service_method:
                service: orob2b_sale.helper.notification
                method: send
                method_parameters: [$.email, $.data]

    orob2b_sale_frontend_quote_accept_and_submit_to_order:
        parameters:
            data:
                type: OroB2B\Bundle\SaleBundle\Entity\Quote
        acl_resource: [CREATE, entity:commerce@OroB2B\Bundle\OrderBundle\Entity\Order]
        conditions:
#            @equal: [false, $.data.hasOfferVariants]
        actions:
            - @get_active_user: $.user
            - @call_service_method:
                service: orob2b_sale.service.quote_to_order_converter
                method: convert
                method_parameters: [$.data, $.user, null, true]
                attribute: $.order

    orob2b_sale_frontend_quote_accept_and_submit_to_order_from_widget:
        parameters:
            data:
                type: OroB2B\Bundle\SaleBundle\Entity\Quote
            quote_to_order:
                type: array
        acl_resource: [CREATE, entity:commerce@OroB2B\Bundle\OrderBundle\Entity\Order]
        conditions:
#            @equal: [true, $.data.hasOfferVariants]
        actions:
            - @get_active_user: $.user
            - @call_service_method:
                service: orob2b_sale.service.quote_to_order_converter
                method: convert
                method_parameters: [$.data, $.user, $.quote_to_order, true]
                attribute: $.order

    orob2b_sale_send_no_quote_alert:
        parameters:
            data:
                type: OroB2B\Bundle\RFPBundle\Entity\Request
        actions:
            - @foreach:
                array: $.data.accountUser.salesRepresentatives
                value: $.saleRep
                actions:
                    - @send_email_template:
                        conditions:
                            @not_empty: $.data.accountUser.owner
                        parameters:
                            from: $.data.accountUser.owner.email
                            to: $.saleRep.email
                            template: 'request_no_quote_alert'
                            entity: $.data
            - @call_method:
                object: $.data.accountUser.salesRepresentatives
                method: toArray
                attribute: $.accountUserSalesReps
            - @foreach:
                array: $.data.account.salesRepresentatives
                value: $.saleRep
                actions:
                    - @send_email_template:
                        conditions:
                            @and:
                                - @not_empty: $.data.accountUser.owner
                                - @not_in: [$.saleRep, $.accountUserSalesReps]
                        parameters:
                            from: $.data.accountUser.owner.email
                            to: $.saleRep.email
                            template: 'request_no_quote_alert'
                            entity: $.data
