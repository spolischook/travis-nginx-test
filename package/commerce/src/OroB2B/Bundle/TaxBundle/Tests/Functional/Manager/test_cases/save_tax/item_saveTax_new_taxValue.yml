method: saveTax
reference: order_line_item_2
configuration: { use_as_base_by_default: destination }
databaseBefore:
    'OroB2B\Bundle\OrderBundle\Entity\Order':
        simple_order:
            poNumber: { property_value: simple_order }
            account: { class: 'OroB2B\Bundle\AccountBundle\Entity\Account', query: { name: 'account.orphan' } }
            currency: 'USD'
            billingAddress:
                class: 'OroB2B\Bundle\OrderBundle\Entity\OrderAddress'
                property_value:
                    country: { class: 'Oro\Bundle\AddressBundle\Entity\Country', query: { iso2Code: 'US' } }
                    region: { class: 'Oro\Bundle\AddressBundle\Entity\Region', query: { combinedCode: 'US-AL' } }
            shippingAddress:
                class: 'OroB2B\Bundle\OrderBundle\Entity\OrderAddress'
                property_value:
                    country: { class: 'Oro\Bundle\AddressBundle\Entity\Country', query: { iso2Code: 'US' } }
                    region: { class: 'Oro\Bundle\AddressBundle\Entity\Region', query: { combinedCode: 'US-AL' } }
    'OroB2B\Bundle\OrderBundle\Entity\OrderLineItem':
        order_line_item_1:
            productSku: { property_value: order_line_item_1 }
            order: { reference: simple_order }
            quantity: { property_value: 6 }
            price: { class: 'Oro\Bundle\CurrencyBundle\Entity\Price', property_value: { value: '15.99', currency: USD } }
            product: { class: 'OroB2B\Bundle\ProductBundle\Entity\Product', query: { sku: 'product.1' } }
        order_line_item_2:
            productSku: { property_value: order_line_item_2 }
            order: { reference: simple_order }
            quantity: { property_value: 6 }
            price: { class: 'Oro\Bundle\CurrencyBundle\Entity\Price', property_value: { value: '5.55', currency: USD } }
            product: { class: 'OroB2B\Bundle\ProductBundle\Entity\Product', query: { sku: 'product.2' } }
expectedResult: # values from simple_order_item_1 used to check database override
    row:
        includingTax: '36.63' # 33.3 + 3.33
        excludingTax: '33.3'  # 5.55 * 6
        taxAmount: '3.33'     # 33.3 * 0.1
        adjustment: '0'
        currency: 'USD'
    unit:
        includingTax: '6.11' # 5.55 + 0.555
        excludingTax: '5.55'
        taxAmount: '0.56'    # 5.55 * 0.1
        adjustment: '-0.005' # 0.555 - 0.56
        currency: 'USD'
    taxes:
        - { tax: 'TAX1', rate: '0.1', taxable_amount: '33.3', tax_amount: '3.33', currency: 'USD' }
